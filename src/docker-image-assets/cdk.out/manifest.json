{
  "version": "45.0.0",
  "artifacts": {
    "ApiGatewayStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "ApiGatewayStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/d1sg-ecr/version"
      }
    },
    "ApiGatewayStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "ApiGatewayStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-d1sg-ecr-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-d1sg-ecr-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-d1sg-ecr-assets-${AWS::AccountId}-${AWS::Region}/c7807934ef1f21b5cd0971adb0b7089ba7e3dd07754f2b2d9add63cbaabdda40.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/d1sg-ecr/version",
        "additionalDependencies": [
          "ApiGatewayStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-d1sg-ecr-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/d1sg-ecr/version"
        }
      },
      "dependencies": [
        "EcrPublicListStack",
        "ApiGatewayStack.assets"
      ],
      "metadata": {
        "/ApiGatewayStack/ListPublicResourcesApi/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApi15A795C0"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/CloudWatchRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiCloudWatchRole408A5EC8"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Account": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiAccountDC17EB0B"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiDeploymentF0B172B327a7131b66c24bc1a821a5e8dd0f5018"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/DeploymentStage.prod/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiDeploymentStageprodCE3B3422"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiEndpoint9C776253"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimages9119C1ED"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/alpine/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesalpine35F8D492"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/alpine/GET/ApiPermission.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.alpine": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesalpineGETApiPermissionApiGatewayStackListPublicResourcesApi523C6CCBGETimagesalpine1BC43A6F"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/alpine/GET/ApiPermission.Test.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.alpine": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesalpineGETApiPermissionTestApiGatewayStackListPublicResourcesApi523C6CCBGETimagesalpineEDF22CC7"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/alpine/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesalpineGET6896010D"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/base/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesbaseD205864C"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/base/GET/ApiPermission.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.base": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesbaseGETApiPermissionApiGatewayStackListPublicResourcesApi523C6CCBGETimagesbaseF68DBD11"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/base/GET/ApiPermission.Test.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.base": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesbaseGETApiPermissionTestApiGatewayStackListPublicResourcesApi523C6CCBGETimagesbase3CA02533"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/base/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesbaseGETEB3A19D2"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/ci/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesciF4EECE79"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/ci/GET/ApiPermission.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.ci": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesciGETApiPermissionApiGatewayStackListPublicResourcesApi523C6CCBGETimagesci330CB4D8"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/ci/GET/ApiPermission.Test.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.ci": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesciGETApiPermissionTestApiGatewayStackListPublicResourcesApi523C6CCBGETimagesciEF2AEC68"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/ci/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesciGETF121989E"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/devcontainer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesdevcontainer4693276A"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/devcontainer/GET/ApiPermission.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.devcontainer": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesdevcontainerGETApiPermissionApiGatewayStackListPublicResourcesApi523C6CCBGETimagesdevcontainer93789244"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/devcontainer/GET/ApiPermission.Test.ApiGatewayStackListPublicResourcesApi523C6CCB.GET..images.devcontainer": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesdevcontainerGETApiPermissionTestApiGatewayStackListPublicResourcesApi523C6CCBGETimagesdevcontainer45A874EE"
          }
        ],
        "/ApiGatewayStack/ListPublicResourcesApi/Default/images/devcontainer/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListPublicResourcesApiimagesdevcontainerGET050230C0"
          }
        ],
        "/ApiGatewayStack/CustomDomain/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomDomain21DD44B6"
          }
        ],
        "/ApiGatewayStack/CustomDomain/Map:v1--public=>ApiGatewayStackListPublicResourcesApiDeploymentStageprod6BC15572": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomDomainMapv1publicApiGatewayStackListPublicResourcesApiDeploymentStageprod6BC1557279990EC0"
          }
        ],
        "/ApiGatewayStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/ApiGatewayStack/CDKMetadata/Condition": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadataAvailable"
          }
        ],
        "/ApiGatewayStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/ApiGatewayStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "ApiGatewayStack"
    },
    "EcrPublicListStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcrPublicListStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/d1sg-ecr/version"
      }
    },
    "EcrPublicListStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "EcrPublicListStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-d1sg-ecr-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-d1sg-ecr-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-d1sg-ecr-assets-${AWS::AccountId}-${AWS::Region}/debd797b1b1350cf48ef68db695a43d65e366d3ae6526d0b1a218a6e0339aa83.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/d1sg-ecr/version",
        "additionalDependencies": [
          "EcrPublicListStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-d1sg-ecr-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/d1sg-ecr/version"
        }
      },
      "dependencies": [
        "EcrPublicListStack.assets"
      ],
      "metadata": {
        "/EcrPublicListStack/EcrPublicListRepos-alpine/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposalpineServiceRole42B72416"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-alpine/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposalpineServiceRoleDefaultPolicy28AED673"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-alpine/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposalpine318F1959"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-base/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposbaseServiceRole3D494290"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-base/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposbaseServiceRoleDefaultPolicyECC6863B"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-base/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposbase2CF9DF0B"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-ci/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposciServiceRole174B3269"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-ci/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposciServiceRoleDefaultPolicy09AAA28D"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-ci/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposci360CD476"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-devcontainer/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposdevcontainerServiceRole1A9F3819"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-devcontainer/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposdevcontainerServiceRoleDefaultPolicyF976AF9D"
          }
        ],
        "/EcrPublicListStack/EcrPublicListRepos-devcontainer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrPublicListReposdevcontainer9BA6EDA5"
          }
        ],
        "/EcrPublicListStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcrPublicListStack/CDKMetadata/Condition": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadataAvailable"
          }
        ],
        "/EcrPublicListStack/Exports/Output{\"Fn::GetAtt\":[\"EcrPublicListReposalpine318F1959\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcrPublicListReposalpine318F1959Arn40CFB1AF"
          }
        ],
        "/EcrPublicListStack/Exports/Output{\"Fn::GetAtt\":[\"EcrPublicListReposbase2CF9DF0B\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcrPublicListReposbase2CF9DF0BArn5EC72B67"
          }
        ],
        "/EcrPublicListStack/Exports/Output{\"Fn::GetAtt\":[\"EcrPublicListReposci360CD476\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcrPublicListReposci360CD476Arn13FC98AE"
          }
        ],
        "/EcrPublicListStack/Exports/Output{\"Fn::GetAtt\":[\"EcrPublicListReposdevcontainer9BA6EDA5\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcrPublicListReposdevcontainer9BA6EDA5ArnAD38A5A4"
          }
        ],
        "/EcrPublicListStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcrPublicListStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcrPublicListStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name"
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD"
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path"
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default"
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs"
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies"
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite"
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK"
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently"
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default."
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`."
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default."
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy"
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model."
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis."
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy"
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role"
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1020.2"
}